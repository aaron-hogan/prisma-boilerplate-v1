generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model Profile {
  id         String      @id @default(uuid())
  createdAt  DateTime    @default(now()) @map("created_at")
  updatedAt  DateTime    @updatedAt @map("updated_at")
  appRole    AppRole     @default(USER) @map("app_role")
  authUserId String      @unique @map("auth_user_id")
  membership Membership?
  products   Product[]
  purchases  Purchase[]

  @@map("profiles")
}

model Product {
  id        String      @id @default(dbgenerated("extensions.uuid_generate_v4()"))
  name      String
  type      ProductType
  price     Decimal     @db.Decimal(10, 2)
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @default(now()) @updatedAt @map("updated_at")
  createdBy String      @map("created_by")
  deletedAt DateTime?   @map("deleted_at") @db.Timestamp(6)
  creator   Profile     @relation(fields: [createdBy], references: [id])
  purchases Purchase[]

  @@index([createdBy], map: "idx_products_created_by")
  @@index([deletedAt], map: "idx_products_deleted_at")
  @@map("products")
}

model Membership {
  id        String    @id @default(uuid())
  startDate DateTime  @default(now()) @map("start_date")
  endDate   DateTime? @map("end_date")
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  profileId String    @unique @map("profile_id")
  profile   Profile   @relation(fields: [profileId], references: [id], onDelete: Cascade)

  @@map("memberships")
}

model Purchase {
  id        String    @id @default(uuid())
  quantity  Int       @default(1)
  total     Decimal   @db.Decimal(10, 2)
  createdAt DateTime  @default(now()) @map("created_at")
  deletedAt DateTime? @map("deleted_at") @db.Timestamp(6)
  profileId String    @map("profile_id")
  productId String    @map("product_id")
  product   Product   @relation(fields: [productId], references: [id])
  profile   Profile   @relation(fields: [profileId], references: [id])

  @@index([productId], map: "idx_purchases_product_id")
  @@index([profileId], map: "idx_purchases_profile_id")
  @@index([deletedAt], map: "idx_purchases_deleted_at")
  @@map("purchases")
}

enum AppRole {
  ADMIN
  STAFF
  MEMBER
  USER
}

enum ProductType {
  APPLE
  ORANGE
  MEMBERSHIP
}
